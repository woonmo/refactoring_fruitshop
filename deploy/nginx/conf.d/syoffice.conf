server{
    listen 80;

    # 서버 이름
    server_name syoffice.kro.kr;
    # HTTP 요청을 HTTPS 로 리다이렉트
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    # 서버 이름
    server_name syoffice.kro.kr;


    # Certbot 인증서 경로
    ssl_certificate /etc/letsencrypt/live/syoffice.kro.kr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/syoffice.kro.kr/privkey.pem; # managed by Certbot


    # 루트경로(/) 로 들어오는 요청 처리
    location / {
        # 스프링 앱 컨테이너로 요청 전달: docker-compose.yml의 spring-app 서비스, 8080포트
        proxy_pass http://groupware:8080;

        # 요청 헤더 설정: 클라이언트 정보 유지
        proxy_set_header Host $host;    # 요청 호스트 이름 전달
        proxy_set_header X-Real-IP $remote_addr;    # 클라이언트의 실제 IP 전달
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 프록시 경로 정보 추가
        proxy_set_header X-Forwarded-Proto $scheme; # 프로토콜(HTTP/HTTPS) 전달
    }


    # 웹소켓 채팅 관련 요청 처리
    location /syoffice/chatting/ {
        # 스프링 앱 컨테이너로 요청 전달: docker-compose.yml의 spring-app 서비스, 8080포트
        proxy_pass http://groupware:8080/syoffice/chatting/;

        # 웹 소켓 관련
        proxy_http_version 1.1;
        proxy_set_header Connection "upgrade";         # WebSocket 연결 유지를 위한 필수 설정
        proxy_set_header Upgrade $http_upgrade;        # WebSocket 지원


        # 요청 헤더 설정: 클라이언트 정보 유지
        proxy_set_header Host $host;    # 요청 호스트 이름 전달
        proxy_set_header X-Real-IP $remote_addr;    # 클라이언트의 실제 IP 전달
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 프록시 경로 정보 추가
        proxy_set_header X-Forwarded-Proto $scheme; # 프로토콜(HTTP/HTTPS) 전달
    }
}